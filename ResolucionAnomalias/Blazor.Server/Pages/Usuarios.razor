@page "/usuarios"
@using DTOs
@using Domain.Model
@using API.Clients
@using API.Clients.EntitiesClients
@inject IJSRuntime JSRuntime
@inject IAuthService AuthService

<PageTitle>Usuarios</PageTitle>

<AuthorizeRole Roles="Operador">
    <div class="container-fluid">
        <h3>Usuarios</h3>

        <div class="mb-3 d-flex">
            <InputText @bind-Value="searchText" placeholder="Buscar por nombre, email o tipo..." class="form-control me-2" />
            <button class="btn btn-primary" @onclick="SearchUsuarios">Buscar</button>
            <button class="btn btn-secondary ms-2" @onclick="ClearSearch">Limpiar</button>
        </div>

        @if (usuarios == null)
        {
            <p>Cargando...</p>
        }
        else
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nombre</th>
                        <th>Email</th>
                        <th>Tipo</th>
                        <th>Zona</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usu in usuarios)
                    {
                        <tr>
                            <td>@usu.Cod_usu</td>
                            <td>@usu.Nombre_usu</td>
                            <td>@usu.Email_usu</td>
                            <td>@usu.Tipo_usu</td>
                            <td>@usu.ZonaNombre</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</AuthorizeRole>

@code {
    private List<UsuarioDTO>? usuarios;
    private string searchText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsuarios();
    }

    private async Task LoadUsuarios(string texto = "")
    {
        if (string.IsNullOrWhiteSpace(texto))
        {
            usuarios = (await UsuarioApiClient.GetAllAsync())?.ToList();
        }
        else
        {
            usuarios = (await UsuarioApiClient.GetByCriteriaAsync(texto))?.ToList();
        }
    }

    private async Task SearchUsuarios()
    {
        await LoadUsuarios(searchText);
    }

    private async Task ClearSearch()
    {
        searchText = string.Empty;
        await LoadUsuarios();
    }
}