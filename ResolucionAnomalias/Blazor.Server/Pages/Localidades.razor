@page "/localidades"
@using DTOs
@using API.Clients
@using API.Clients.EntitiesClients
@using Blazor.Server.Components
@inject IJSRuntime JSRuntime
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Localidades</PageTitle>

<AuthorizeRole Roles="Operador">
    <div class="container-fluid">
        <h3>Localidades</h3>

        <button class="btn btn-primary mb-3" @onclick="OpenAddModal">
            + Agregar
        </button>

        @if (localidades == null)
        {
            <p>Cargando...</p>
        }
        else
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Código</th>
                        <th>Nombre</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var loc in localidades)
                    {
                        <tr>
                            <td>@loc.ID</td>
                            <td>@loc.Codigo</td>
                            <td>@loc.Nombre</td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => OpenEditModal(loc)">Editar</button>
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => ConfirmDelete(loc)">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</AuthorizeRole>

<LocalidadModal @ref="localidadModal" OnLocalidadChanged="LoadLocalidades" />

@code {
    private List<LocalidadDTO>? localidades;
    private LocalidadModal localidadModal = null!;

    protected override async Task OnInitializedAsync()
    {
        await LoadLocalidades();
    }

    private async Task LoadLocalidades()
    {
        localidades = (await LocalidadApiClient.GetAllAsync())?.ToList();
    }

    private Task OpenAddModal() => localidadModal.ShowAddModal();
    private Task OpenEditModal(LocalidadDTO loc) => localidadModal.ShowEditModal(loc);

    private async Task ConfirmDelete(LocalidadDTO loc)
    {
        var confirm = await JSRuntime.InvokeAsync<bool>("confirm", $"¿Eliminar {loc.Nombre}?");
        if (confirm)
        {
            await LocalidadApiClient.DeleteAsync(loc.ID);
            await LoadLocalidades();
        }
    }
}