@inherits LayoutComponentBase
@using API.Clients
@inject IAuthService AuthService
@inject NavigationManager Navigation
@implements IDisposable

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 d-flex justify-content-end">
            @if (isAuthenticated)
            {
                <button class="btn btn-primary btn-sm" @onclick="Logout">Cerrar Sesión</button>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool isAuthenticated = false;

    protected override async Task OnInitializedAsync()
    {
        await CheckAuthenticationState();
        AuthService.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }

    private async Task CheckAuthenticationState()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
        StateHasChanged();
    }

    private void OnAuthenticationStateChanged(bool authenticated)
    {
        InvokeAsync(async () =>
        {
            await CheckAuthenticationState();
        });
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }

    public void Dispose()
    {
        AuthService.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}